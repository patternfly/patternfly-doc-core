---
import { getCollection } from 'astro:content'

import { Navigation as ReactNav } from './Navigation.tsx'
import { TextContentEntry } from './NavEntry.tsx'

import { content } from '../content'

import { config } from '../pf-docs.config.mjs'

const collections = await Promise.all(
  content.map(
    async (entry) => await getCollection(entry.name as 'textContent'),
  ),
)

const navEntries = collections.flat();
const sections = new Set(navEntries.map((entry) => entry.data.section));

const navSectionData: Record<string, TextContentEntry[]> = {};
Array.from(sections).map((section) => {
  const entries = navEntries.filter((entry) => entry.data.section === section).map(entry => ({id: entry.id, data: {id: entry.data.id, section }} as TextContentEntry))

  navSectionData[section] = entries;
})

---

<ReactNav client:only="react" navData={navSectionData} navSectionOrder={config.navSectionOrder}
transition:animate="fade"
/>
