---
import { getCollection, render } from 'astro:content'
import { Title } from '@patternfly/react-core'
import MainLayout from '../../layouts/Main.astro'
import { content } from '../../content'
import { PropsTable } from '../../components/PropsTable'
import { kebabCase } from 'change-case'
import { componentTabs } from '../../globals'

export async function getStaticPaths() {
  const collections = await Promise.all(
    content.map(
      async (entry) => await getCollection(entry.name as 'textContent'),
    ),
  )

  return collections.flat().map((entry) => ({
    params: { page: kebabCase(entry.data.id), section: entry.data.section },
    props: {
      entry,
      title: entry.data.title,
      propComponents: entry.data.propComponents,
    },
  }))
}

async function getPropsData(propComponents: string[]) {
  if (!propComponents.length) {
    return []
  }

  const url = new URL(`/props?components=${propComponents}`, Astro.url)
  const response = await fetch(url)
  const propsData = await response.json()

  return propsData
}

const { entry, propComponents } = Astro.props
const { title, id, section } = entry.data
const { Content } = await render(entry)
const propsData = await getPropsData(propComponents)

if(section === 'components') { // if section is components, rewrite to first tab content
  return Astro.rewrite(`/components/${kebabCase(id)}/${componentTabs[id][0]}`);
}
---

<MainLayout>
  {
    title && (
      <Title headingLevel="h1" size="4xl">
        {title} 
      </Title>
    )
  }
  <Content />
  {
    propsData
      .filter((comp: any) => !!comp)
      .map((component: any) => (
        <PropsTable
          key={component.name}
          componentName={component.name}
          componentDescription={component.description}
          componentProps={component.props}
        />
      ))
  }
</MainLayout>
