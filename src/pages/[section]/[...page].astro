---
import { getCollection, render } from 'astro:content'
import { Title, PageSection, Stack, StackItem } from '@patternfly/react-core'
import MainLayout from '../../layouts/Main.astro'
import { content } from '../../content'
import { kebabCase } from 'change-case'
import { componentTabs } from '../../globals'
import PropsTables from '../../components/PropsTables.astro'
import CSSTable from '../../components/CSSTable.astro'
import SectionGallery from '../../components/section-gallery/SectionGallery.astro'

export async function getStaticPaths() {
  const collections = await Promise.all(
    content.map(
      async (entry) => await getCollection(entry.name as 'textContent'),
    ),
  )

  return collections.flat().map((entry) => ({
    params: { page: kebabCase(entry.data.id), section: entry.data.section },
    props: {
      entry,
      title: entry.data.title,
      propComponents: entry.data.propComponents,
      cssPrefix: entry.data.cssPrefix,
    },
  }))
}

const { entry, propComponents, cssPrefix } = Astro.props
const { title, id, section } = entry.data
const { Content } = await render(entry)

if(section === 'components' && componentTabs[id]) { // if section is components & tab exists, rewrite to first tab content
  return Astro.rewrite(`/components/${kebabCase(id)}/${componentTabs[id][0]}`);
}
---

<MainLayout>
  {
    title && (
      <Title headingLevel="h1" size="4xl">
        {title}
      </Title>
    )
  }
    <PageSection id="main-content" isFilled>
        <Content components={{
          SectionGallery
        }}/>
        <Stack hasGutter>
          <StackItem>
            <PropsTables propComponents={propComponents} server:defer />
          </StackItem>
          <StackItem>
            <CSSTable cssPrefix={cssPrefix} server:defer />
          </StackItem>
        </Stack>
  </PageSection>
</MainLayout>
