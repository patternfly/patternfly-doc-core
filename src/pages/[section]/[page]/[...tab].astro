---
import { getCollection, render } from 'astro:content'
import { Title, PageSection } from '@patternfly/react-core'
import MainLayout from '../../../layouts/Main.astro'
import { content } from '../../../content'
import { kebabCase } from '../../../utils/case'
import { componentTabs, tabNames, buildTab, sortTabs } from '../../../globals'
import {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  a,
  small,
  blockquote,
  pre,
  hr,
  ul,
  ol,
  dl,
  li,
  dt,
  dd,
} from '../../../components/Content'
import LiveExample from '../../../components/LiveExample.astro'
import DocsTables from '../../../components/DocsTables.astro'

export async function getStaticPaths() {
  const collections = await Promise.all(
    content.map(
      async (entry) => await getCollection(entry.name as 'textContent'),
    ),
  )

  const flatCol =  collections.flat()
    .filter((entry) => entry.data.tab) // only pages with a tab should match this route
    .map((entry) => {
      // Build tabs dictionary
      let tab = entry.data.tab;
      if(tab) { // check for demos/deprecated
        if(entry.id.includes('demos')) {
          tab = `${tab}-demos`;
        } else if (entry.id.includes('deprecated')) {
          tab = `${tab}-deprecated`;
        }
      }
      buildTab(entry, tab);

      return {
        params: { page: kebabCase(entry.data.id), section: entry.data.section, tab },
        props: { entry, ...entry.data },
      }
    })

  sortTabs()
  return flatCol
}

const { entry, propComponents, cssPrefix } = Astro.props

const { title, id, section } = entry.data
const { Content } = await render(entry)
const currentPath = Astro.url.pathname
---

<MainLayout>
  {
    title && (
      <Title headingLevel="h1" size="4xl">
        {title}
      </Title>
    )
  }
  {
    componentTabs[id] && (
      <PageSection
        id="ws-sticky-nav-tabs"
        stickyOnBreakpoint={{ default: 'top' }}
        type="tabs"
      >
        <div class="pf-v6-c-tabs pf-m-page-insets pf-m-no-border-bottom">
          <ul class="pf-v6-c-tabs__list">
            {componentTabs[id].map((tab: string) => (
              // eslint-disable-next-line react/jsx-key
              <li
                class={`pf-v6-c-tabs__item${currentPath === `/${section}/${kebabCase(id)}/${tab}` ? ' pf-m-current' : ''}`}
              >
                <a
                  class="pf-v6-c-tabs__link"
                  href={`/${section}/${kebabCase(id)}/${tab}`}
                >
                  {tabNames[tab]}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </PageSection>
    )
  }
  <PageSection id="main-content" isFilled>
    <Content
      components={{
        h1,
        h2,
        h3,
        h4,
        h5,
        h6,
        p,
        a,
        small,
        blockquote,
        pre,
        hr,
        ul,
        ol,
        dl,
        li,
        dt,
        dd,
        LiveExample,
      }}
    />
    <DocsTables propComponents={propComponents} cssPrefix={cssPrefix} />
  </PageSection>
</MainLayout>
